{"version":3,"sources":["components/Header.tsx","components/Document-Viwer.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["route_menu","routes","filter","m","menu","HeaderComponent","name","className","to","map","route","i","path","DocumentViewerComponent","sourceUrl","useState","doc","setDoc","useEffect","axios","get","responseType","then","res","console","log","file","Blob","data","type","fileURL","URL","createObjectURL","src","encodeURIComponent","title","width","height","allowFullScreen","App","Header","fallback","Comp","componentName","component","React","lazy","default","DataTableComponent","TableDetailsComponent","Registration","getReactComponent","element","props","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"irBAQMA,EAAaC,IAAOC,QAAO,SAAAC,GAAC,OAAe,IAAXA,EAAEC,QAgBzBC,EAfgC,SAAC,GAAD,EAAGC,KAAH,OAC3C,mCACI,sBAAKC,UAAU,uBAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMC,GAAI,IAAKD,UAAU,WAAzB,SAAoC,mDAExC,qBAAKA,UAAU,qBAAf,SACKP,EAAWS,KAAI,SAACC,EAAOC,GACpB,OAAO,cAAC,IAAD,CAAiCH,GAAIE,EAAME,KAAML,UAAU,WAA3D,SAAuEG,EAAMJ,KAAO,KAAzEI,EAAMJ,KAAO,IAAMK,c,wBCsE1CE,EA5EgD,SAAC,GAAkB,EAAhBC,UAAiB,IAC/E,EAAsBC,mBAAS,IAA/B,mBAAOC,EAAP,KAAYC,EAAZ,KAgCA,OAfAC,qBAAU,WACNC,IAAMC,IAAI,gCAAiC,CAAEC,aAAc,SAAUC,MAAK,SAACC,GACvEC,QAAQC,IAAIF,GACZ,IAAMG,EAAO,IAAIC,KACb,CAACJ,EAAIK,MAEL,CAAEC,KAAM,sEAENC,EAAUC,IAAIC,gBAAgBN,GACpCT,EAAOa,QAIZ,IAGC,mCACKd,EAAM,wBAGHiB,IAAG,6DAAwDC,mBAAmBlB,IAC9EmB,MAAM,OACNC,MAAM,OACNC,OAAO,MACPC,iBAAiB,IACR,sBCEVC,MAjDf,WAuBE,OACE,qBAAKhC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAACiC,EAAD,CAAiBlC,KAAK,kBACtB,cAAC,EAAD,CAAyBQ,UAAU,yGACnC,qBAAKP,UAAU,gBAAf,SACE,cAAC,WAAD,CAAUkC,SAAU,6CAApB,SACE,cAAC,IAAD,UACGxC,IAAOQ,KAAI,SAACC,EAAOC,GAClB,IAAI+B,EA/BQ,SAACC,GACzB,IAAIC,EAAiB,KACrB,OAAQD,GACN,IAAK,mBACHC,EAAYC,IAAMC,MAAK,kBAAM,iCAC7B,MACF,IAAK,qBACHF,EAAYC,IAAMC,MAAK,kBAAM,8BAAwDxB,MAAK,kBAA6B,CAAEyB,QAA/B,EAAGC,0BAC7F,MACF,IAAK,wBACHJ,EAAYC,IAAMC,MAAK,kBAAM,8BAA2DxB,MAAK,kBAAgC,CAAEyB,QAAlC,EAAGE,6BAChG,MACF,IAAK,eACHL,EAAYC,IAAMC,MAAK,kBAAM,oDAA2DxB,MAAK,kBAAuB,CAAEyB,QAAzB,EAAGG,oBAMpG,OAAON,EAYgBO,CAAkBzC,EAAMkC,WACnC,OAAO,cAAC,IAAD,CACLhC,KAAMF,EAAME,KAEZwC,QACE,cAACV,EAAD,eAAUhC,EAAM2C,SAFb3C,EAAMJ,KAAOK,kBC5BrB2C,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBlC,MAAK,YAAkD,IAA/CmC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.71a4d84a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../App.css'\r\nimport { routes } from \"../routes/route.json\";\r\n\r\nexport interface HeaderProps {\r\n    name: string;\r\n}\r\nconst route_menu = routes.filter(m => m.menu === true);\r\nconst HeaderComponent: React.FC<HeaderProps> = ({ name }) => (\r\n    <>\r\n        <div className='App-header-container'>\r\n            <div className='App-header'>\r\n                <Link to={'/'} className='App-link'><h1>Portal Header</h1></Link>\r\n            </div>\r\n            <div className='App-link-container'>\r\n                {route_menu.map((route, i) => {\r\n                    return <Link key={route.name + '-' + i} to={route.path} className='App-link'>{route.name + ' '}</Link>\r\n                })}\r\n            </div>\r\n        </div>\r\n    </>\r\n);\r\n\r\nexport default HeaderComponent;","import React, { useEffect, useState } from 'react';\r\n//import DocViewer, { DocViewerRenderers } from \"react-doc-viewer\";\r\n// import { DocumentViewer } from 'react-documents';\r\n//import FileViewer from 'react-file-viewer';\r\nimport axios from \"axios\";\r\nimport '../App.css';\r\n\r\nexport interface DocumentViewerProps {\r\n    sourceUrl: string;\r\n}\r\n\r\nconst DocumentViewerComponent: React.FC<DocumentViewerProps> = ({ sourceUrl }) => {\r\n    const [doc, setDoc] = useState('');\r\n    const docs = [\r\n        { uri: 'https://github.com/ParthaSahu14/npm-registry-test/raw/master/npm-registry-consumer/testdocoument.pdf' },\r\n        { uri: 'https://github.com/ParthaSahu14/npm-registry-test/raw/master/npm-registry-consumer/msexcel.xlsx' },\r\n        { uri: 'https://github.com/ParthaSahu14/npm-registry-test/raw/master/npm-registry-consumer/jYVg-test-excelaki.xlsx' },\r\n        { uri: 'https://github.com/ParthaSahu14/npm-registry-test/raw/master/npm-registry-consumer/FlooringEstimates.xlsx' },\r\n        { uri: 'https://github.com/ParthaSahu14/npm-registry-test/raw/master/npm-registry-consumer/FinancialSample.xlsx' },\r\n        { uri: 'https://github.com/ParthaSahu14/npm-registry-test/raw/master/npm-registry-consumer/testdocoument.pdf' },\r\n\r\n        // { uri: 'http://localhost:3001/testmsword.docx' },\r\n        // { uri: 'http://localhost:3001/msexcel.xlsx' },\r\n        // { uri: 'http://localhost:3001/jYVg-test-excelaki.xlsx' },\r\n        // { uri: 'http://localhost:3001/FlooringEstimates.xlsx' },\r\n        // { uri: 'http://localhost:3001/FinancialSample.xlsx' },\r\n        // { uri: 'http://localhost:3001/testdocoument.pdf' }\r\n    ];\r\n\r\n    useEffect(() => {\r\n        axios.get('http://localhost:3001/getfile', { responseType: 'blob' }).then((res) => {\r\n            console.log(res);\r\n            const file = new Blob(\r\n                [res.data],\r\n                //{ type: 'application/pdf' });\r\n                { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' });\r\n            //Build a URL from the file\r\n            const fileURL = URL.createObjectURL(file);\r\n            setDoc(fileURL);\r\n            //Open the URL on new Window\r\n            //window.open(fileURL);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            {doc ? <iframe\r\n                //src={\"https://docs.google.com/viewer?url=\" + sourceUrl + \"&embedded=true\"}\r\n                //src={doc}\r\n                src={`https://view.officeapps.live.com/op/embed.aspx?src=${encodeURIComponent(doc)}`}\r\n                title=\"file\"\r\n                width=\"100%\"\r\n                height=\"600\"\r\n                allowFullScreen={true}\r\n            ></iframe> : 'Loading document'}\r\n            {/* <iframe\r\n                //src={\"https://docs.google.com/viewer?url=\" + sourceUrl + \"&embedded=true\"}\r\n                src={`https://view.officeapps.live.com/op/embed.aspx?src=${encodeURIComponent(sourceUrl)}`}\r\n                title=\"file\"\r\n                width=\"100%\"\r\n                height=\"600\"\r\n                allowFullScreen={true}\r\n            ></iframe> */}\r\n\r\n            {/* <DocViewer\r\n                pluginRenderers={DocViewerRenderers}\r\n                documents={docs}\r\n                theme={{\r\n                    primary: \"#5296d8\",\r\n                    secondary: \"#0f0f0f\",\r\n                    tertiary: \"#5296d899\",\r\n                    text_primary: \"#0a0a0a\",\r\n                    text_secondary: \"#5296d8\",\r\n                    text_tertiary: \"#00000099\",\r\n                    disableThemeScrollbar: false,\r\n                }}\r\n            /> */}\r\n            {/* <DocumentViewer\r\n                url={\"http://localhost:3001/testdocoument.pdf\"}\r\n                viewer=\"url\"\r\n                style={{ width: '100%', height: '50vh' }}\r\n            /> */}\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default DocumentViewerComponent;","import React, { Suspense } from 'react';\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\nimport { routes } from \"./routes/route.json\";\r\nimport HeaderComponent from \"./components/Header\";\r\nimport DocumentViewerComponent from './components/Document-Viwer.component';\r\n\r\n\r\nfunction App() {\r\n  const getReactComponent = (componentName: string): any => {\r\n    let component: any = null;\r\n    switch (componentName) {\r\n      case \"LandingComponent\":\r\n        component = React.lazy(() => import('./components/Landing.component'));\r\n        break;\r\n      case \"DataTableComponent\":\r\n        component = React.lazy(() => import('npm-registry-provider/lib/esm/DataTableModule').then(({ DataTableComponent }) => ({ default: DataTableComponent })));\r\n        break;\r\n      case \"TableDetailsComponent\":\r\n        component = React.lazy(() => import('npm-registry-provider/lib/esm/TableDetailsModule').then(({ TableDetailsComponent }) => ({ default: TableDetailsComponent })));\r\n        break;\r\n      case \"Registration\":\r\n        component = React.lazy(() => import('npm-registry-provider/lib/esm/RegistrationModule').then(({ Registration }) => ({ default: Registration })));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n\r\n    return component;\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <HeaderComponent name='Portal Header' />\r\n        <DocumentViewerComponent sourceUrl='https://github.com/ParthaSahu14/npm-registry-test/raw/master/npm-registry-consumer/testdocoument.pdf' />\r\n        <div className='App-container'>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Routes>\r\n              {routes.map((route, i) => {\r\n                let Comp = getReactComponent(route.component);\r\n                return <Route\r\n                  path={route.path}\r\n                  key={route.name + i}\r\n                  element={\r\n                    <Comp {...route.props} />\r\n                  }\r\n                />\r\n              })}\r\n            </Routes>\r\n          </Suspense>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App; \r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}